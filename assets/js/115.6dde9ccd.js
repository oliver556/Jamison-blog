(window.webpackJsonp=window.webpackJsonp||[]).push([[115],{453:function(t,s,a){"use strict";a.r(s);var n=a(7),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"javascript-深入之头疼的类型转换-下"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#javascript-深入之头疼的类型转换-下"}},[t._v("#")]),t._v(" JavaScript 深入之头疼的类型转换(下)")]),t._v(" "),s("h2",{attrs:{id:"📖-前言"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#📖-前言"}},[t._v("#")]),t._v(" 📖. 前言")]),t._v(" "),s("p",[t._v("举个例子：")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("在 JavaScript 中，这是完全可以运行的，不过你有没有好奇，为什么 1 和 '1' 分属不同的数据类型，为什么就可以进行运算呢？")]),t._v(" "),s("p",[t._v("这其实是因为 JavaScript 自动的将数据类型进行了转换，我们通常称为隐式类型转换。但是我们都知道，"),s("code",[t._v("+")]),t._v(" 运算符既可以用于数字加法，也能用于字符串拼接，那在这个例子中，是将数字 "),s("code",[t._v("1")]),t._v(" 转成字符串 "),s("code",[t._v("'1'")]),t._v("，进行拼接运算？\n还是将字符串 "),s("code",[t._v("'1'")]),t._v(" 转成数字 "),s("code",[t._v("1")]),t._v("，进行加法运算呢？")]),t._v(" "),s("p",[t._v("先卖个关子，虽然估计你也知道答案。今天，我们就常见的隐式类型转化的场景进行介绍。")]),t._v(" "),s("h2",{attrs:{id:"一-一元操作符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一-一元操作符"}},[t._v("#")]),t._v(" 一. 一元操作符 +")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("当 + 运算符作为一元操作符的时候，查看 "),s("a",{attrs:{href:"http://es5.github.io/#x11.4.6",target:"_blank",rel:"noopener noreferrer"}},[t._v("ES5规范1.4.6"),s("OutboundLink")],1),t._v(" ，会调用 "),s("code",[t._v("ToNumber")]),t._v(" 处理该值，相当于 "),s("code",[t._v("Number('1')")]),t._v("，最终结果返回数字 "),s("code",[t._v("1")]),t._v("。")]),t._v(" "),s("p",[t._v("那么下面的这些结果呢？")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("p",[t._v("既然是调用 "),s("code",[t._v("ToNumber")]),t._v(" 方法，回想"),s("RouterLink",{attrs:{to:"/《JavaScript》笔记/01.深入系列/17.JavaScript深入之头疼的类型转换-上.html"}},[t._v("《JavaScript深入之头疼的类型转换(上)》")]),t._v(" 中的内容，当输入的值是对象的时候，先调用 "),s("code",[t._v("ToPrimitive(input, Number)")]),t._v(" 方法，\n执行的步骤是：")],1),t._v(" "),s("ol",[s("li",[t._v("如果 "),s("code",[t._v("obj")]),t._v(" 为基本类型，直接返回")]),t._v(" "),s("li",[t._v("否则，调用 "),s("code",[t._v("valueOf")]),t._v(" 方法，如果返回一个原始值，则 "),s("code",[t._v("JavaScript")]),t._v(" 将其返回。")]),t._v(" "),s("li",[t._v("否则，调用 "),s("code",[t._v("toString")]),t._v(" 方法，如果返回一个原始值，则 "),s("code",[t._v("JavaScript")]),t._v(" 将其返回。")]),t._v(" "),s("li",[t._v("否则，"),s("code",[t._v("JavaScript")]),t._v(" 抛出一个类型错误异常。")])]),t._v(" "),s("p",[t._v("以 "),s("code",[t._v("+[]")]),t._v(" 为例，"),s("code",[t._v("[]")]),t._v(" 调用 "),s("code",[t._v("valueOf")]),t._v(" 方法，返回一个空数组，因为不是原始值，调用 "),s("code",[t._v("toString")]),t._v(" 方法，返回 ``。")]),t._v(" "),s("p",[t._v("得到返回值后，然后再调用 "),s("code",[t._v("ToNumber")]),t._v(" 方法，"),s("code",[t._v('""')]),t._v(" 对应的返回值是 "),s("code",[t._v("0")]),t._v("，所以最终返回 "),s("code",[t._v("0")]),t._v("。")]),t._v(" "),s("p",[t._v("剩下的例子以此类推。结果是：")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// NaN")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// NaN")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("h2",{attrs:{id:"二-二元操作符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二-二元操作符"}},[t._v("#")]),t._v(" 二. 二元操作符 +")]),t._v(" "),s("h3",{attrs:{id:"_1-规范"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-规范"}},[t._v("#")]),t._v(" 1. 规范")]),t._v(" "),s("p",[t._v("现在 "),s("code",[t._v("+")]),t._v(" 运算符又变成了二元操作符，毕竟它也是加减乘除中的加号")]),t._v(" "),s("p",[s("code",[t._v("1 + '1'")]),t._v(" 我们知道答案是 '11'，那 "),s("code",[t._v("null + 1")]),t._v("、"),s("code",[t._v("[] + []")]),t._v("、"),s("code",[t._v("[] + {}")]),t._v("、"),s("code",[t._v("{} + {}")]),t._v(" 呢？")]),t._v(" "),s("p",[t._v("如果要了解这些运算的结果，不可避免的我们要从规范下手。")]),t._v(" "),s("p",[t._v("规范地址： "),s("a",{attrs:{href:"http://es5.github.io/#x11.6.1",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://es5.github.io/#x11.6.1"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("不过这次就不直接大段大段的引用规范了，直接给大家讲简化后的内容。")]),t._v(" "),s("p",[t._v("到底当执行 "),s("code",[t._v("+")]),t._v(" 运算的时候，会执行怎样的步骤呢？让我们根据规范 "),s("code",[t._v("11.6.1")]),t._v(" 来捋一捋：")]),t._v(" "),s("p",[t._v("当计算 value1 + value2时：")]),t._v(" "),s("ol",[s("li",[t._v("lprim = ToPrimitive(value1)")]),t._v(" "),s("li",[t._v("rprim = ToPrimitive(value2)")]),t._v(" "),s("li",[t._v("如果 lprim 是字符串或者 rprim 是字符串，那么返回 ToString(lprim) 和 ToString(rprim) 的拼接结果")]),t._v(" "),s("li",[t._v("返回 ToNumber(lprim) 和 ToNumber(rprim)的运算结果")])]),t._v(" "),s("p",[t._v("规范的内容就这样结束了。没有什么新的内容，"),s("code",[t._v("ToString")]),t._v("、"),s("code",[t._v("ToNumber")]),t._v("、"),s("code",[t._v("ToPrimitive")]),t._v(" 都是在"),s("RouterLink",{attrs:{to:"/《JavaScript》笔记/01.深入系列/17.JavaScript深入之头疼的类型转换-上.html"}},[t._v("《JavaScript 深入之头疼的类型转换(上)》")]),t._v(" 中讲到过的内容，\n所以我们直接进分析阶段：")],1),t._v(" "),s("p",[t._v("让我们来举几个例子：")]),t._v(" "),s("h3",{attrs:{id:"_2-null-与数字"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-null-与数字"}},[t._v("#")]),t._v(" 2. Null 与数字")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("按照规范的步骤进行分析：")]),t._v(" "),s("ol",[s("li",[t._v("lprim = ToPrimitive(null) 因为null 是基本类型，直接返回，所以 lprim = null")]),t._v(" "),s("li",[t._v("rprim = ToPrimitive(1) 因为 1 是基本类型，直接返回，所以 rprim = null")]),t._v(" "),s("li",[t._v("lprim 和 rprim 都不是字符串")]),t._v(" "),s("li",[t._v("返回 ToNumber(null) 和 ToNumber(1) 的运算结果")])]),t._v(" "),s("p",[t._v("接下来：")]),t._v(" "),s("p",[s("code",[t._v("ToNumber(null)")]),t._v(" 的结果为0，(回想上篇 Number(null))，"),s("code",[t._v("ToNumber(1)")]),t._v(" 的结果为 1")]),t._v(" "),s("p",[t._v("所以，"),s("code",[t._v("null + 1")]),t._v(" 相当于 "),s("code",[t._v("0 + 1")]),t._v("，最终的结果为数字 "),s("code",[t._v("1")]),t._v("。")]),t._v(" "),s("p",[t._v("这个还算简单，看些稍微复杂的：")]),t._v(" "),s("h3",{attrs:{id:"_3-数组与数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-数组与数组"}},[t._v("#")]),t._v(" 3. 数组与数组")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("依然按照规范：")]),t._v(" "),s("ol",[s("li",[t._v('lprim = ToPrimitive([])，[]是数组，相当于 ToPrimitive([], Number)，先调用 valueOf 方法，返回对象本身，因为不是原始值，调用 toString 方法，返回空字符串 ""')]),t._v(" "),s("li",[t._v("rprim 类似。")]),t._v(" "),s("li",[t._v("lprim 和 rprim 都是字符串，执行拼接操作")])]),t._v(" "),s("p",[t._v("所以，"),s("code",[t._v("[] + []")]),t._v(" 相当于 "),s("code",[t._v('"" + ""')]),t._v("，最终的结果是空字符串 "),s("code",[t._v('""')]),t._v("。")]),t._v(" "),s("p",[t._v("看个更复杂的：")]),t._v(" "),s("h3",{attrs:{id:"_4-数组与对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-数组与对象"}},[t._v("#")]),t._v(" 4. 数组与对象")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 两者结果一致")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[t._v("按照规范：")]),t._v(" "),s("ol",[s("li",[t._v('lprim = ToPrimitive([])，lprim = ""')]),t._v(" "),s("li",[t._v('rprim = ToPrimitive({})，相当于调用 ToPrimitive({}, Number)，先调用 valueOf 方法，返回对象本身，因为不是原始值，调用 toString 方法，返回 "[object Object]"')]),t._v(" "),s("li",[t._v("lprim 和 rprim 都是字符串，执行拼接操作")])]),t._v(" "),s("p",[t._v("所以，"),s("code",[t._v("[] + {}")]),t._v(" 相当于 "),s("code",[t._v('"" + "[object Object]"')]),t._v("，最终的结果是 "),s("code",[t._v('"[object Object]"')]),t._v("。")]),t._v(" "),s("p",[t._v("下面的例子，可以按照示例类推出结果：")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2017")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("04")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("21")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这个知道是数字还是字符串类型就行")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[t._v("结果是：")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "[object Object][object Object]"')]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2017")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("04")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("21")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "Sun May 21 2017 00:00:00 GMT+0800 (CST)1"')]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("h2",{attrs:{id:"三-注意"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三-注意"}},[t._v("#")]),t._v(" 三. 注意")]),t._v(" "),s("p",[t._v("以上的运算都是在 "),s("code",[t._v("console.log")]),t._v(" 中进行，如果你直接在 "),s("code",[t._v("Chrome")]),t._v(" 或者 "),s("code",[t._v("Firebug")]),t._v(" 开发工具中的命令行直接输入，你也许会惊讶的看到一些结果的不同，比如：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.staticaly.com/gh/oliver556/image-hosting@master/20220313/javascript_03-13_04.10aqcp22b1n4.jpg",alt:"javascript_03-13_04"}})]),t._v(" "),s("p",[t._v("我们刚才才说过 "),s("code",[t._v("{} + []")]),t._v(" 的结果是 "),s("code",[t._v('"[object Object]"')]),t._v(" 呐，这怎么变成了 "),s("code",[t._v("0")]),t._v(" 了？")]),t._v(" "),s("p",[t._v("不急，我们尝试着加一个括号：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.staticaly.com/gh/oliver556/image-hosting@master/20220313/javascript_03-13_05.70x6gs4m5740.jpg",alt:"javascript_03-13_05"}})]),t._v(" "),s("p",[t._v("结果又变成了正确的值，这是为什么呢？")]),t._v(" "),s("p",[t._v("其实，在不加括号的时候，"),s("code",[t._v("{}")]),t._v(" 被当成了一个独立的空代码块，所以 "),s("code",[t._v("{} + []")]),t._v(" 变成了 "),s("code",[t._v("+[]")]),t._v("，结果就变成了 "),s("code",[t._v("0")]),t._v("。")]),t._v(" "),s("p",[t._v("同样的问题还出现在 "),s("code",[t._v("{} + {}")]),t._v(" 上，而且火狐和谷歌的结果还不一样：")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('> {} + {}\n// 火狐： NaN\n// 谷歌： "[object Object][object Object]"\n')])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[t._v("如果 "),s("code",[t._v("{}")]),t._v(" 被当成一个独立的代码块，那么这句话相当于 "),s("code",[t._v("+{}")]),t._v("，相当于 "),s("code",[t._v("Number({})")]),t._v("，结果自然是 "),s("code",[t._v("NaN")]),t._v("，可是 "),s("code",[t._v("Chrome")]),t._v(" 却在这里返回了正确的值。")]),t._v(" "),s("p",[t._v("那为什么这里就返回了正确的值呢？我也不知道，欢迎解答~")]),t._v(" "),s("h2",{attrs:{id:"四-相等"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#四-相等"}},[t._v("#")]),t._v(" 四. == 相等")]),t._v(" "),s("h3",{attrs:{id:"_1-规范-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-规范-2"}},[t._v("#")]),t._v(" 1. 规范")]),t._v(" "),s("p",[s("code",[t._v('"=="')]),t._v(" 用于比较两个值是否相等，当要比较的两个值类型不一样的时候，就会发生类型的转换。")]),t._v(" "),s("p",[t._v('关于使用 "==" 进行比较的时候，具体步骤可以查看 '),s("a",{attrs:{href:"http://es5.github.io/#x11.9.3",target:"_blank",rel:"noopener noreferrer"}},[t._v("规范11.9.5"),s("OutboundLink")],1),t._v(" ：")]),t._v(" "),s("p",[t._v("当执行 x == y 时：")]),t._v(" "),s("ol",[s("li",[t._v("如果 x 与 y 是同一类型："),s("br"),t._v("\ni. x 是 Undefined，返回 true"),s("br"),t._v("\nii. x 是 Null，返回 true"),s("br"),t._v("\niii. x 是数字："),s("br"),t._v("\n    a. x 是 NaN，返回 false"),s("br"),t._v("\n    b. y 是 NaN，返回 false"),s("br"),t._v("\n    x 与 y 相等，返回 true"),s("br"),t._v("\n    x 是 +0，y 是 -0，返回 true"),s("br"),t._v("\n    x 是 -0，y 是 +0，返回 true"),s("br"),t._v("\n    返回 false\niv. x 是字符串，完全相等返回 true,否则返回 false\nv. x 是布尔值，x 和 y 都是 true 或者 false，返回 true，否则返回 false\nvi. x 和 y 指向同一个对象，返回 true，否则返回 false")]),t._v(" "),s("li",[t._v("x 是 null 并且 y 是 undefined，返回 true")]),t._v(" "),s("li",[t._v("x 是 undefined 并且y是 null，返回 true")]),t._v(" "),s("li",[t._v("x 是数字，y 是字符串，判断 x == ToNumber(y)")]),t._v(" "),s("li",[t._v("x 是字符串，y 是数字，判断 ToNumber(x) == y")]),t._v(" "),s("li",[t._v("x 是布尔值，判断 ToNumber(x) == y")]),t._v(" "),s("li",[t._v("y 是布尔值，判断 x ==ToNumber(y)")]),t._v(" "),s("li",[t._v("x 是字符串或者数字，y 是对象，判断 x == ToPrimitive(y)")]),t._v(" "),s("li",[t._v("x 是对象，y 是字符串或者数字，判断 ToPrimitive(x) == y")]),t._v(" "),s("li",[t._v("返回 false")])]),t._v(" "),s("p",[t._v("觉得看规范判断太复杂？我们来分几种情况来看：")]),t._v(" "),s("h3",{attrs:{id:"_2-null-和-undefined"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-null-和-undefined"}},[t._v("#")]),t._v(" 2. null 和 undefined")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("看规范第2、3步：")]),t._v(" "),s("blockquote",[s("ol",{attrs:{start:"2"}},[s("li",[t._v("x 是 null 并且 y 是 undefined，返回 true")])])]),t._v(" "),s("blockquote",[s("ol",{attrs:{start:"3"}},[s("li",[t._v("x 是 undefined 并且 y 是 null，返回 true")])])]),t._v(" "),s("p",[t._v("所以例子的结果自然为 "),s("code",[t._v("true")]),t._v("。")]),t._v(" "),s("p",[t._v("这时候，我们可以回想在 "),s("a",{attrs:{href:""}},[t._v("《JavaScript专题之类型判断(上)》")]),t._v(" 中见过的一段 "),s("code",[t._v("demo")]),t._v("，就是编写判断对象的类型 "),s("code",[t._v("type")]),t._v(" 函数时，如果输入值是 "),s("code",[t._v("undefined")]),t._v("，就返回字符串 "),s("code",[t._v("undefined")]),t._v("，如果是 "),s("code",[t._v("null")]),t._v("，就返回字符串 "),s("code",[t._v("null")]),t._v("。")]),t._v(" "),s("p",[t._v("如果是你，你会怎么写呢？")]),t._v(" "),s("p",[t._v("下面是 jQuery 的写法：")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("obj")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" obj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])]),s("h3",{attrs:{id:"_3-字符串与数字"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-字符串与数字"}},[t._v("#")]),t._v(" 3. 字符串与数字")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("结果肯定是true，问题在于是字符串转化成了数字和数字比较还是数字转换成了字符串和字符串比较呢？")]),t._v(" "),s("p",[t._v("看规范第4、5步：")]),t._v(" "),s("blockquote",[s("ol",{attrs:{start:"4"}},[s("li",[t._v("x 是数字，y 是字符串，判断 x == ToNumber(y)")])])]),t._v(" "),s("blockquote",[s("ol",{attrs:{start:"5"}},[s("li",[t._v("x 是字符串，y 是数字，判断 ToNumber(x) == y")])])]),t._v(" "),s("p",[t._v("结果很明显，都是转换成数字后再进行比较")]),t._v(" "),s("h3",{attrs:{id:"_4-布尔值和其他类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-布尔值和其他类型"}},[t._v("#")]),t._v(" 4. 布尔值和其他类型")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("当要判断的一方出现 "),s("code",[t._v("false")]),t._v(" 的时候，往往最容易出错，比如上面这个例子，凭直觉应该是 "),s("code",[t._v("true")]),t._v("，毕竟 "),s("code",[t._v("Boolean('2')")]),t._v(" 的结果可是 true，但这道题的结果却是 false。")]),t._v(" "),s("p",[t._v("归根到底，还是要看规范，规范第6、7步：")]),t._v(" "),s("blockquote",[s("ol",{attrs:{start:"6"}},[s("li",[t._v("x 是布尔值，判断 ToNumber(x) == y")])])]),t._v(" "),s("blockquote",[s("ol",{attrs:{start:"7"}},[s("li",[t._v("y 是布尔值，判断 x ==ToNumber(y)")])])]),t._v(" "),s("p",[t._v("当一方出现布尔值的时候，就会对这一方的值进行 ToNumber 处理，也就是说 true 会被转化成 1，")]),t._v(" "),s("p",[s("code",[t._v("true == '2'")]),t._v(" 就相当于 "),s("code",[t._v("1 == '2'")]),t._v(" 就相当于 "),s("code",[t._v("1 == 2")]),t._v("，结果自然是 "),s("code",[t._v("false")]),t._v("。")]),t._v(" "),s("p",[t._v("所以当一方是布尔值的时候，会对布尔值进行转换，因为这种特性，所以尽量少使用 "),s("code",[t._v("xx == true")]),t._v(" 和 "),s("code",[t._v("xx == false")]),t._v(" 的写法。")]),t._v(" "),s("p",[t._v("比如:")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 不建议")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 建议")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 更好")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br")])]),s("h3",{attrs:{id:"_5-对象与非对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-对象与非对象"}},[t._v("#")]),t._v(" 5. 对象与非对象")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("42")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'42'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("看规范第8、9步：")]),t._v(" "),s("blockquote",[s("ol",{attrs:{start:"8"}},[s("li",[t._v("x 不是字符串或者数字，y 是对象，判断 x == ToPrimitive(y)")])])]),t._v(" "),s("blockquote",[s("ol",{attrs:{start:"9"}},[s("li",[t._v("x 是对象，y 不是字符串或者数字，判断 ToPrimitive(x) == y")])])]),t._v(" "),s("p",[t._v("以这个例子为例，会使用 "),s("code",[t._v("ToPrimitive")]),t._v(" 处理 "),s("code",[t._v("['42']")]),t._v("，调用 "),s("code",[t._v("valueOf")]),t._v("，返回对象本身，再调用 "),s("code",[t._v("toString")]),t._v("，返回 "),s("code",[t._v("'42'")]),t._v("，所以")]),t._v(" "),s("p",[s("code",[t._v("42 == ['42']")]),t._v(" 相当于 "),s("code",[t._v("42 == '42'")]),t._v(" 相当于 "),s("code",[t._v("42 == 42")]),t._v("，结果为 "),s("code",[t._v("true")]),t._v("。")]),t._v(" "),s("p",[t._v("到此为止，我们已经看完了第2、3、4、5、6、7、8、9步，其他的一概返回 false。")]),t._v(" "),s("h3",{attrs:{id:"_6-其他"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-其他"}},[t._v("#")]),t._v(" 6. 其他")]),t._v(" "),s("p",[t._v("再多举几个例子进行分析：")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[s("code",[t._v("false == undefined")]),t._v(" 相当于 "),s("code",[t._v("0 == undefined")]),t._v(" 不符合上面的情形，执行最后一步 返回 "),s("code",[t._v("false")])]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[s("code",[t._v("false == []")]),t._v(" 相当于 "),s("code",[t._v("0 == []")]),t._v(" 相当于 "),s("code",[t._v("0 == ''")]),t._v(" 相当于 "),s("code",[t._v("0 == 0")]),t._v("，结果返回 "),s("code",[t._v("true")])]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("首先会执行 "),s("code",[t._v("![]")]),t._v(" 操作，转换成 "),s("code",[t._v("false")]),t._v("，相当于 "),s("code",[t._v("[] == false")]),t._v(" 相当于 "),s("code",[t._v("[] == 0")]),t._v(" 相当于 "),s("code",[t._v("'' == 0")]),t._v(" 相当于 "),s("code",[t._v("0 == 0")]),t._v("，结果返回 "),s("code",[t._v("true")])]),t._v(" "),s("p",[t._v("最后再举一些会让人踩坑的例子：")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br")])]),s("p",[t._v("以上均返回 true")]),t._v(" "),s("h2",{attrs:{id:"五-其他"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#五-其他"}},[t._v("#")]),t._v(" 五. 其他")]),t._v(" "),s("p",[t._v("除了这两种情形之外，其实还有很多情形会发生隐式类型转换，比如 "),s("code",[t._v("if")]),t._v("、"),s("code",[t._v("? :")]),t._v("、"),s("code",[t._v("&&")]),t._v(" 等情况，但相对来说，比较简单，就不再讲解。")])])}),[],!1,null,null,null);s.default=e.exports}}]);