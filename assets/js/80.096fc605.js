(window.webpackJsonp=window.webpackJsonp||[]).push([[80],{418:function(s,a,e){"use strict";e.r(a);var t=e(7),r=Object(t.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"git-ssh-多用户配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-ssh-多用户配置"}},[s._v("#")]),s._v(" Git SSH 多用户配置")]),s._v(" "),a("h2",{attrs:{id:"📖-前言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#📖-前言"}},[s._v("#")]),s._v(" 📖. 前言")]),s._v(" "),a("p",[s._v("当我们使用 Git 时，常用的授权通常有两种方式：HTTPS 和 SSH。当选用 HTTPS 时，每次代码的增删改查都需要输入一串密码进行身份验证，影响代码提交效率，因此大部分情况下我们会使用 SSH 免密登录。\n那么，在使用 SSH 免密登录过程中，你有遇到过什么问题吗？")]),s._v(" "),a("p",[s._v("很多朋友在用 github 管理项目的时候，都是直接使用 https url 克隆到本地，当然也有有些人使用 SSH url 克隆到本地。然而，为什么绝大多数人会使用https url克隆呢？")]),s._v(" "),a("p",[s._v("这是因为，使用 https url 克隆对初学者来说会比较方便，复制 https url 然后到 "),a("code",[s._v("git Bash")]),s._v(" 里面直接用 "),a("code",[s._v("clone")]),s._v(" 命令克隆到本地就好了。而使用 SSH url 克隆却需要在克隆之前先配置和添加好 SSH key 。")]),s._v(" "),a("p",[s._v("可是对于很多小伙伴来说，Git 账户基本都不仅仅一个，不单单是公司的 Gitlab、Gitee 等其他代码托管平台的账户，也会有自己个人的 GitHub 账户整理自己的学习代码，那如何在同一台电脑上，让这两个账户共存呢？")]),s._v(" "),a("h2",{attrs:{id:"一-https-和-ssh-的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一-https-和-ssh-的区别"}},[s._v("#")]),s._v(" 一. https 和 SSH 的区别：")]),s._v(" "),a("ol",[a("li",[s._v("前者可以随意克隆 github 上的项目，而不管是谁的；而后者则是你必须是你要克隆的项目的拥有者或管理员，且需要先添加 SSH key ，否则无法克隆。")]),s._v(" "),a("li",[s._v("https url 在 push 的时候是需要验证用户名和密码的；而 SSH 在push的时候，是不需要输入用户名的，如果配置 SSH key 的时候设置了密码，则需要输入密码的，否则直接是不需要输入密码的。")])]),s._v(" "),a("h2",{attrs:{id:"二-ssh-工作原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二-ssh-工作原理"}},[s._v("#")]),s._v(" 二. SSH 工作原理")]),s._v(" "),a("blockquote",[a("p",[s._v("SSH(Secure Shell) 是一种加密的网络传输协议，可以在不安全的网络中为网络服务提供安全的传输环境。SSH 以非对称加密实现身份验证，通过 C/S(client-server) 模式来实现。")])]),s._v(" "),a("p",[s._v("具体交互见下图：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.staticaly.com/gh/oliver556/image-hosting@master/20220426/git_04-26_01.2g5eushgeu4g.webp",alt:"git_04-26_01"}})]),s._v(" "),a("p",[s._v("在我们上传代码到 github 服务器的过程中，github server 就会作为 SSH server 来接受客户端的请求，并返回 public key（即公钥） 给客户端。而客户端将会进行 public key 和 private key（即私钥）的匹配校验，最终建立连接。")]),s._v(" "),a("p",[s._v("在明白了 SSH 的原理之后，你可能会有点疑惑，这个公钥和私钥是怎么来的呢？下面我们就来解答这些疑问。")]),s._v(" "),a("h2",{attrs:{id:"三-基本的-github-ssh-配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三-基本的-github-ssh-配置"}},[s._v("#")]),s._v(" 三. 基本的 Github SSH 配置")]),s._v(" "),a("p",[s._v("Git SSH 的公钥和私钥都是在客户端手动生成的。一般我们会将私钥保存在客户端，公钥配置在服务端。此处以 github 为例，我们一起来进行 SSH 的配置。")]),s._v(" "),a("blockquote",[a("p",[s._v("配置 SSH 秘钥：")]),s._v(" "),a("ul",[a("li",[s._v("根据 "),a("a",{attrs:{href:"https://docs.github.com/en/authentication/connecting-to-github-with-ssh/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent#adding-your-ssh-key-to-the-ssh-agent",target:"_blank",rel:"noopener noreferrer"}},[s._v("github 文档"),a("OutboundLink")],1),s._v(" ，\n在客户端创建 SSH 公钥和私钥对，并将私钥添加到客户端的 ssh-agent 中。")]),s._v(" "),a("li",[a("a",{attrs:{href:"https://docs.github.com/en/authentication/connecting-to-github-with-ssh/adding-a-new-ssh-key-to-your-github-account",target:"_blank",rel:"noopener noreferrer"}},[s._v("将公钥配置在 github 的相应账户中"),a("OutboundLink")],1)]),s._v(" "),a("li",[s._v("测试配置是否成功")])])]),s._v(" "),a("h3",{attrs:{id:"_1-检查是否有-ssh-key"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-检查是否有-ssh-key"}},[s._v("#")]),s._v(" 1. 检查是否有 SSH key")]),s._v(" "),a("p",[s._v("首先需要检查你电脑是否已经有 SSH key")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" ~/.ssh\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("这两个命令就是检查是否已经存在 "),a("code",[s._v("id_rsa.pub")]),s._v(" 或 "),a("code",[s._v("id_dsa.pub")]),s._v(" 文件。")]),s._v(" "),a("h3",{attrs:{id:"_2-创建一个-ssh-key"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-创建一个-ssh-key"}},[s._v("#")]),s._v(" 2. 创建一个 SSH key")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ ssh-keygen "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-t")]),s._v(" rsa "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-C")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"your_email@example.com"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("blockquote",[a("p",[s._v("代码参数含义：")]),s._v(" "),a("ul",[a("li",[s._v("-t 指定密钥类型，默认是 rsa ，可以省略。")]),s._v(" "),a("li",[s._v("-C 设置注释文字，比如邮箱。")]),s._v(" "),a("li",[s._v("-f 指定密钥文件存储文件名。")])])]),s._v(" "),a("p",[s._v("以上代码省略了 "),a("code",[s._v("-f")]),s._v(" 参数，因此，运行上面那条命令后会让你输入一个文件名，用于保存刚才生成的 SSH key 代码，如：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("Generating public/private rsa key pair.\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Enter file in which to save the key (/c/Users/you/.ssh/id_rsa): [Press enter]")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("当然，你也可以不输入文件名，使用默认文件名（"),a("strong",[s._v("单个 SSH 时推荐")]),s._v("），那么就会生成 "),a("code",[s._v("id_rsa")]),s._v(" 和 "),a("code",[s._v("id_rsa.pub")]),s._v(" 两个秘钥文件。")]),s._v(" "),a("p",[s._v("接着又会提示你输入两次密码（该密码是你 push 文件的时候要输入的密码，而不是 github 管理者的密码），")]),s._v(" "),a("p",[s._v("这里 "),a("strong",[s._v("不要输入密码")]),s._v("，直接按回车。那么 push 的时候就不需要输入密码，直接提交到 github 上了，如：\n")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("Enter passphrase "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("empty "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" no passphrase"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(":\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Enter same passphrase again:")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("接下来，就会显示如下代码提示，如：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("Your identification has been saved in /c/Users/you/.ssh/id_rsa.Enter passphrase\n# Your public key has been saved in /c/Users/you/.ssh/id_rsa.pub.\n# The key fingerprint is:\n# 01:0f:f4:3b:ca:85:d6:17:a1:7d:f0:68:9d:f0:a2:db your_email@example.com\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("当你看到上面这段代码的收，那就说明，你的 SSH key 已经创建成功，你只需要添加到 github 的 SSH key 上就可以了。")]),s._v(" "),a("h3",{attrs:{id:"_3-测试配置是否成功"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-测试配置是否成功"}},[s._v("#")]),s._v(" 3. 测试配置是否成功")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ssh")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-T")]),s._v(" git@github.com\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("如果看到如下结果，则证明配置成功，否则需要根据错误消息进行修改。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("Hi yourusername! You’ve successfully authenticated, but GitHub does not provide shell access\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h2",{attrs:{id:"四-配置多个-ssh"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#四-配置多个-ssh"}},[s._v("#")]),s._v(" 四. 配置多个 SSH")]),s._v(" "),a("h3",{attrs:{id:"_1-生成-github-ssh"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-生成-github-ssh"}},[s._v("#")]),s._v(" 1. 生成 GitHub SSH")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ ssh-keygen "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-t")]),s._v(" rsa "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-C")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"your_email@example.com"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-f")]),s._v(" ~/.ssh/github_id_rsa\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"_2-生成-gitee-ssh"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-生成-gitee-ssh"}},[s._v("#")]),s._v(" 2. 生成 Gitee SSH")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ ssh-keygen "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-t")]),s._v(" rsa "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-C")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"your_email@example.com"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-f")]),s._v(" ~/.ssh/gitee_id_rsa\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"_3-生成公司-ssh"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-生成公司-ssh"}},[s._v("#")]),s._v(" 3. 生成公司 SSH")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ ssh-keygen "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-t")]),s._v(" rsa "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-C")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"your_email@example.com"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-f")]),s._v(" ~/.ssh/xxx_id_rsa\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"_4-配置-config"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-配置-config"}},[s._v("#")]),s._v(" 4. 配置 config")]),s._v(" "),a("p",[s._v("在 "),a("code",[s._v("~/.ssh")]),s._v(" 目录下新建一个 "),a("code",[s._v("config")]),s._v(" 文件，添加如下内容（其中 Host 和 HostName 填写 git 服务器的域名，IdentityFile 指定私钥的路径）")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("# Default github user (first@mail.com)\n\n# GitHub\nHost github.com # 别名，随便定 后面配置地址有用\nHostName github.com # 要连接的服务器\nPreferredAuthentications publickey\nIdentityFile ~/.ssh/github_id_rsa # 密钥文件的地址，注意是私钥\n\n# Gitee\nHost gitee.com\nHostName gitee.com\nPreferredAuthentications publickey\nIdentityFile ~/.ssh/gitee_id_rsa\n\n# GitLab\nHost xxx.com\nHostName xxx.com\nPreferredAuthentications publickey\nIdentityFile ~/.ssh/xxx_id_rsa\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br")])]),a("h3",{attrs:{id:"_5-测试配置是否成功"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-测试配置是否成功"}},[s._v("#")]),s._v(" 5. 测试配置是否成功")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ssh")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-T")]),s._v(" git@github.com\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ssh")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-T")]),s._v(" git@gitee.com\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ssh")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-T")]),s._v(" git@xxx.com\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("➜  ~ ssh -T git@github.com\nHi yourusername! You've successfully authenticated, but GitHub does not provide shell access.\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h2",{attrs:{id:"五-解决ssh权限问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#五-解决ssh权限问题"}},[s._v("#")]),s._v(" 五. 解决ssh权限问题（）:")]),s._v(" "),a("p",[s._v("通常一台电脑生成一个 ssh 不会有这个问题，当一台电脑生成多个 ssh 的时候，就可能遇到这个问题，解决步骤如下：")]),s._v(" "),a("p",[a("strong",[s._v("1) 查看系统 ssh-key 代理,执行如下命令")])]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ ssh-add "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-l")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("以上命令如果输出 "),a("code",[s._v("The agent has no identities.")]),s._v(" 则表示没有代理。如果系统有代理，可以执行下面的命令清除代理:")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ ssh-add "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-D")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("strong",[s._v("2). 然后依次将不同的ssh添加代理，执行命令如下：")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("$ ssh-add ~/.ssh/github_id_rsa\n$ ssh-add ~/.ssh/gitee_id_rsa\n$ ssh-add ~/.ssh/xxx_id_rsa\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("你会分别得到如下提示：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("Identity added: /Users/xxx/.ssh/github_id_rsa (your_email@example.com)\nIdentity added: /Users/xxx/.ssh/gitee_id_rsa (your_email@example.com)\nIdentity added: /Users/xxx/.ssh/xxx_id_rsa (your_email@example.com)\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("如果使用 "),a("code",[s._v("ssh-add ~/.ssh/id_rsa")]),s._v(" 的时候报如下错误，则需要先运行一下 "),a("code",[s._v("ssh-agent bash")]),s._v(" 命令后再执行 "),a("code",[s._v("ssh-add")]),s._v(" ...等命令")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("Could not open a connection to your authentication agent.\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("然后按照 "),a("a",{attrs:{href:"#_4-3-%E9%85%8D%E7%BD%AE-config"}},[s._v("4.3 配置 config")]),s._v(" 进行配置即可。")]),s._v(" "),a("h2",{attrs:{id:"六-设置-git-提交的用户名"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#六-设置-git-提交的用户名"}},[s._v("#")]),s._v(" 六. 设置 Git 提交的用户名")]),s._v(" "),a("h3",{attrs:{id:"_1-取消全局设置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-取消全局设置"}},[s._v("#")]),s._v(" 1. 取消全局设置")]),s._v(" "),a("p",[s._v("是否设置过全局的 username 和 email，都先进行取消。")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" config "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--global")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--unset")]),s._v(" user.name\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" config "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--global")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--unset")]),s._v(" user.email\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h3",{attrs:{id:"_2-单独设置用户名"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-单独设置用户名"}},[s._v("#")]),s._v(" 2. 单独设置用户名")]),s._v(" "),a("p",[s._v("在 repo 中使用不同的用户进行操作，进入 repo 目录后，需要先设置 username 和 email，然后再进行其他操作")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" config user.name yourusername\n\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" config user.email "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"youremail"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("然后查看该 repo 目录下，你的用户名和密码信息：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" config user.name\n\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" config user.password\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h2",{attrs:{id:"🌟-命令总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#🌟-命令总结"}},[s._v("#")]),s._v(" 🌟. 命令总结")]),s._v(" "),a("ul",[a("li",[s._v("查看用户名 ："),a("code",[s._v("git config user.name")])]),s._v(" "),a("li",[s._v("查看密码： "),a("code",[s._v("git config user.password")])]),s._v(" "),a("li",[s._v("查看邮箱："),a("code",[s._v("git config user.email")])]),s._v(" "),a("li",[s._v("测试ssh："),a("code",[s._v("ssh -T git@github.com")])])]),s._v(" "),a("h2",{attrs:{id:"🌟-小结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#🌟-小结"}},[s._v("#")]),s._v(" 🌟. 小结")]),s._v(" "),a("p",[s._v("本文是笔者在实践中的记录，也参考了一些网上优秀的作者经验，如有错误请指出。")]),s._v(" "),a("p",[s._v("参考资料")]),s._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://hanpanpan200.github.io/2019/10/14/setup-multiple-git-accounts-by-ssh-config/#%E9%85%8D%E7%BD%AE%E5%A4%9A%E4%B8%AA-github-%E8%B4%A6%E6%88%B7%E7%9A%84-SSH",target:"_blank",rel:"noopener noreferrer"}},[s._v("通过 ssh config 配置 Git 多账户 SSH 登录"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://blog.csdn.net/CoderBruis/article/details/120674608",target:"_blank",rel:"noopener noreferrer"}},[s._v("Git通过配置config维护多个账号，区分个人账号和公司账号"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://www.cnblogs.com/hezhi/p/10317642.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("同一台电脑上个人的github账户如何与公司的gitlab账户共存"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://blog.csdn.net/jasonwang_/article/details/84031521",target:"_blank",rel:"noopener noreferrer"}},[s._v("解决使用git，ssh每次都要输入密码"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://gitee.com/help/articles/4229",target:"_blank",rel:"noopener noreferrer"}},[s._v("Gitee - Git配置多个SSH-Key"),a("OutboundLink")],1)])]),s._v(" "),a("p",[s._v("更进一步阅读，了解 SSH 知识："),a("a",{attrs:{href:"https://segmentfault.com/q/1010000000835302",target:"_blank",rel:"noopener noreferrer"}},[s._v("是否必须每次添加 ssh-add"),a("OutboundLink")],1),s._v(" 和 "),a("a",{attrs:{href:"https://book.douban.com/subject/2299605/",target:"_blank",rel:"noopener noreferrer"}},[s._v("《SSH，The Secure Shell》"),a("OutboundLink")],1),s._v(" 书本。")])])}),[],!1,null,null,null);a.default=r.exports}}]);